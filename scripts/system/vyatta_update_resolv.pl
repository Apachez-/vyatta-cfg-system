#!/usr/bin/perl -w
#
# Module: vyatta_update_resolv.pl
#
# **** License ****
# Version: VPL 1.0
#
# The contents of this file are subject to the Vyatta Public License
# Version 1.0 ("License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.vyatta.com/vpl
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# This code was originally developed by Vyatta, Inc.
# Portions created by Vyatta are Copyright (C) 2007 Vyatta, Inc.
# All Rights Reserved.
#
# Author: Marat Nepomnyashy
# Date: December 2007
# Description: Script to update '/etc/resolv.conf' on commit of 'system domain-search domain' config.
#
# **** End License ****
#

use strict;
use lib "/opt/vyatta/share/perl5/";


use Getopt::Long;
my $change_dir = '';
my $modify_dir = '';
GetOptions("change_dir=s" => \$change_dir, "modify_dir=s" => \$modify_dir);


use VyattaConfig;
my $vc = new VyattaConfig();

if ($change_dir ne '') {
	$vc->{_changes_only_dir_base} = $change_dir;
}
if ($modify_dir ne '') {
	$vc->{_new_config_dir_base} = $modify_dir;
}


my $doms = '';
$vc->setLevel('system domain-search domain');
my @domains = $vc->returnValues('.');
foreach my $domain (@domains) {
	if (length($doms) > 0) {
		$doms .= ' ';
	}
	$doms .= $domain;
}

my $search = '';
if (length($doms) > 0) {
	$search = "search\t\t$doms\t\t#line generated by $0\n";
}


# The following will re-write '/etc/resolv.conf' line by line,
# replacing the 'search' specifier with the latest values.

my @resolv;
if (-e '/etc/resolv.conf') {
	open (RESOLV, '</etc/resolv.conf') or die("$0:  Error!  Unable to open '/etc/resolv.conf' for input: $!\n");
	@resolv = <RESOLV>;
	close (RESOLV);
}


my $foundSearch = 0;

open (RESOLV, '>/etc/resolv.conf') or die("$0:  Error!  Unable to open '/etc/resolv.conf' for output: $!\n");
foreach my $line (@resolv) {
	if ($line =~ /^search\s/) {
		$foundSearch = 1;
		if (length($search) > 0) {
			print RESOLV $search;
		}
	} else {
		print RESOLV $line;
	}
}
if ($foundSearch == 0 && length($search) > 0) {
	print RESOLV $search;
}

close (RESOLV);

